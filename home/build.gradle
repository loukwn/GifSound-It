apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 2
        versionName "1.1.0"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // keys
            buildConfigField 'String', "RedditClientId", properties.getProperty("GifSoundIt_RedditClientId")
            buildConfigField 'String', "RedditUserAgent", properties.getProperty("GifSoundIt_RedditUserAgent")
        }

        debug {
            debuggable true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // keys
            buildConfigField 'String', "RedditClientId", properties.getProperty("GifSoundIt_RedditClientId")
            buildConfigField 'String', "RedditUserAgent", properties.getProperty("GifSoundIt_RedditUserAgent")
        }
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // common module
    implementation project(":common")

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$rootProject.kotlin_version"

    // android extensions
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "androidx.cardview:cardview:$rootProject.cardview_version"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerview_version"
    implementation "androidx.annotation:annotation:$rootProject.annotation_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigation_version"

    // anko
    implementation "org.jetbrains.anko:anko-commons:$rootProject.anko_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
//    kapt "com.github.bumptech.glide:compiler:$rootProject.glide_version"

    // network
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.moshi_version"

    // dagger2
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger_version"
    implementation "com.google.dagger:dagger:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger_version"

    // rx
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJava2_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timber_version"

    // Unit testing / mockito stuff
    testImplementation "androidx.arch.core:core-testing:$rootProject.core_testing_version"
    testImplementation "org.mockito:mockito-inline:$rootProject.mockitoInline_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.mockitoKotlin_version"
    testImplementation "junit:junit:$rootProject.junit_version"
}
